{
  "AWSTemplateFormatVersion": "2010-09-09", 
  "Outputs": {
    "WebserverEIP": {
      "Description": "Webserver Public IP", 
      "Value": {
        "Ref": "WebserverIPAddress"
      }
    }, 
    "WebserverInstanceIp": {
      "Description": "Webserver Private IP", 
      "Value": {
        "Fn::GetAtt": [
          "WebserverInstance", 
          "PrivateIp"
        ]
      }
    }, 
    "WebserverPublicHostname": {
      "Description": "Webserver Public Hostname", 
      "Value": {
        "Ref": "WebserverHostRecord"
      }
    }
  }, 
  "Parameters": {
    "AvailabilityZone": {
      "Default": "us-west-2a", 
      "Description": "The availability zone. Must match the AZ of the subnet specified in SubnetId.", 
      "Type": "AWS::EC2::AvailabilityZone::Name"
    }, 
    "HostedZoneId": {
      "Default": "ZT0EVLJFYY46W", 
      "Description": "The ID of the Route53-hosted zone to create a DNS entry in.", 
      "Type": "AWS::Route53::HostedZone::Id"
    }, 
    "HostedZoneName": {
      "Description": "The name of the Route53-hosted zone to create a DNS entry in. This must match the zone name corresponding to HostedZoneId, and is used to define the hostname that will be created. Example: 'examples.domain.com' would result in a hostname of 'frontend.STACKNAME.examples.domain.com'.", 
      "MinLength": 4, 
      "Type": "String"
    }, 
    "KeyName": {
      "Description": "SSH public key to install on the cluster.", 
      "Type": "AWS::EC2::KeyPair::KeyName"
    }, 
    "OurVpcId": {
      "Default": "vpc-8d6050e8", 
      "Description": "The VPC ID. This should refer to a VPC that already has an IGW and a default route.", 
      "Type": "AWS::EC2::VPC::Id"
    }, 
    "SubnetId": {
      "Default": "subnet-38c79f4f", 
      "Description": "The subnet (with auto-assign public IPs enabled) to place this machine in.", 
      "Type": "AWS::EC2::Subnet::Id"
    }, 
    "WebserverInstanceType": {
      "AllowedValues": [
        "c3.2xlarge", 
        "c3.4xlarge", 
        "c3.8xlarge", 
        "c3.large", 
        "c3.xlarge", 
        "c4.2xlarge", 
        "c4.4xlarge", 
        "c4.8xlarge", 
        "c4.large", 
        "c4.xlarge", 
        "d2.2xlarge", 
        "d2.4xlarge", 
        "d2.8xlarge", 
        "d2.xlarge", 
        "i2.2xlarge", 
        "i2.4xlarge", 
        "i2.8xlarge", 
        "i2.xlarge", 
        "m4.10xlarge", 
        "m4.2xlarge", 
        "m4.4xlarge", 
        "m4.large", 
        "m4.xlarge", 
        "r3.2xlarge", 
        "r3.4xlarge", 
        "r3.8xlarge", 
        "r3.large", 
        "r3.xlarge"
      ], 
      "Default": "m4.large", 
      "Description": "The machine type of the frontend instance.", 
      "Type": "String"
    }
  }, 
  "Resources": {
    "WebserverHostRecord": {
      "Properties": {
        "Comment": "Public DNS name for frontend instance.", 
        "HostedZoneId": {
          "Ref": "HostedZoneId"
        }, 
        "Name": {
          "Fn::Join": [
            "", 
            [
              "frontend.", 
              {
                "Ref": "AWS::StackName"
              }, 
              ".", 
              {
                "Ref": "HostedZoneName"
              }, 
              "."
            ]
          ]
        }, 
        "ResourceRecords": [
          {
            "Ref": "WebserverIPAddress"
          }
        ], 
        "TTL": "120", 
        "Type": "A"
      }, 
      "Type": "AWS::Route53::RecordSet"
    }, 
    "WebserverIPAddress": {
      "Properties": {
        "Domain": "vpc", 
        "InstanceId": {
          "Ref": "WebserverInstance"
        }
      }, 
      "Type": "AWS::EC2::EIP"
    }, 
    "WebserverInstance": {
      "Properties": {
        "AvailabilityZone": {
          "Ref": "AvailabilityZone"
        }, 
        "ImageId": "ami-5189a661", 
        "InstanceType": {
          "Ref": "WebserverInstanceType"
        }, 
        "KeyName": {
          "Ref": "KeyName"
        }, 
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": true, 
            "DeviceIndex": "0", 
            "GroupSet": [
              {
                "Ref": "WebserverSecurityGroup"
              }
            ], 
            "SubnetId": {
              "Ref": "SubnetId"
            }
          }
        ], 
        "UserData": {
          "Fn::Base64": "#!/bin/bash -xe\n# This user-data script is run immediately on first boot of the machine.\necho hello, world\n"
        }
      }, 
      "Type": "AWS::EC2::Instance"
    }, 
    "WebserverSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allows the world to access port 80 and 22.", 
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0", 
            "FromPort": "80", 
            "IpProtocol": "tcp", 
            "ToPort": "80"
          }, 
          {
            "CidrIp": "0.0.0.0/0", 
            "FromPort": "22", 
            "IpProtocol": "tcp", 
            "ToPort": "22"
          }
        ], 
        "VpcId": {
          "Ref": "OurVpcId"
        }
      }, 
      "Type": "AWS::EC2::SecurityGroup"
    }
  }
}
